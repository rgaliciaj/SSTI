--TIPOS ESTADO: ESTADO PARA USUARIO, EMPLEADO, TICKET, RECURSO,
CREATE TABLE DB_SERVICIOTI.TIPO_ESTADO
(
    CODIGO_TIPO_ESTADO VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL  CONSTRAINT PK_COD_TIPO_ESTADO PRIMARY KEY,
    NOMBRE_TIPO_ESTADO VARCHAR2(50)                    NOT NULL
)
/

--TODO_TIPO DE ESTADOS
create table DB_SERVICIOTI.ESTADOS
(
    CODIGO_ESTADO       VARCHAR2(36) default SYS_GUID() not null constraint PK_CODIGO_ESTADO primary key,
    NOMBRE_ESTADO       VARCHAR2(100)                   NOT NULL,
    TIPO_ESTADO         VARCHAR2(36)                                REFERENCES DB_SERVICIOTI.TIPO_ESTADO
)
/

--TIPOS CATEGORIA: CAT PARA USUARIO, EQUIPO, RECURSO, ETC
CREATE TABLE DB_SERVICIOTI.TIPO_CATEGORIA
(
    CODIGO_TIPO_CATEGORIA VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL CONSTRAINT PK_COD_TIPO_CAT PRIMARY KEY,
    NOMBRE_TIPO_CATEGORIA VARCHAR2(50)                    NOT NULL,
    CODIGO_ESTADO         VARCHAR2(36)                              references DB_SERVICIOTI.ESTADOS

)
/

--TODO_TIPO DE CATEGORIAS
create table DB_SERVICIOTI.CATEGORIAS
(
    CODIGO_CATEGORIA VARCHAR2(36) default SYS_GUID() not null constraint PK_CODIGO_CATEGORIA primary key,
    NOMBRE_CATEGORIA VARCHAR2(50)                    not null,
    TIPO_CATEGORIA   VARCHAR2(36)                               REFERENCES DB_SERVICIOTI.TIPO_CATEGORIA,
    CODIGO_ESTADO    VARCHAR2(36)                               references DB_SERVICIOTI.ESTADOS
)
/

--ROLES DE USUARIO
CREATE TABLE DB_SERVICIOTI.ROLES_USUARIO
(
    CODIGO_ROL_USUARIO     VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL CONSTRAINT  PK_CODIGO_ROL PRIMARY KEY,
    NOMBRE_ROL             VARCHAR2(100)                   NOT NULL,
    CODIGO_ESTADO          VARCHAR2(36)                              references DB_SERVICIOTI.ESTADOS
)
/

--RUTAS_ASIGNADAS
CREATE TABLE DB_SERVICIOTI.RUTA
(
    CODIGO_RUTA     VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL CONSTRAINT PK_CODIGO_RUTA PRIMARY KEY,
    NOMBRE_RUTA     VARCHAR2(100)                   NOT NULL,
    CODIGO_ESTADO   VARCHAR2(36)                                 references DB_SERVICIOTI.ESTADOS
)
/

--DEPARTAMENTO_AREA
CREATE TABLE DB_SERVICIOTI.DEPTO_AREA
(
    CODIGO_DEPTO_AREA   VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL CONSTRAINT PK_COD_DEPTO_AREA PRIMARY KEY,
    NOMBRE_DEPTO_AREA   VARCHAR2(100)                   NOT NULL,
    CODIGO_ESTADO       VARCHAR2(36)                              references DB_SERVICIOTI.ESTADOS,
    DEPTO_AREA_PADRE    VARCHAR2(36),
    CONSTRAINT FK_DEPTO_AREA_PADRE FOREIGN KEY (DEPTO_AREA_PADRE) REFERENCES DEPTO_AREA(CODIGO_DEPTO_AREA)
)
/

create table DB_SERVICIOTI.EMPLEADOS
(
    CODIGO_EMPLEADO   VARCHAR2(36 char) default SYS_GUID() not null constraint CODIGO_EMPLEADO_PK primary key,
    PRIMER_NOMBRE     VARCHAR2(50)                         not null,
    SEGUNDO_NOMBRE    VARCHAR2(50),
    PRIMER_APELLIDO   VARCHAR2(50)                         not null,
    SEGUNDO_APELLIDO  VARCHAR2(50),
    NIT_CLIENTE       VARCHAR2(12),
    DIRECCION_CLIENTE VARCHAR2(100)                        not null,
    COD_DEPTO_AREA    VARCHAR2(36),
    CODIGO_ESTADO     VARCHAR2(36),
    CODIGO_ROL_USUARIO VARCHAR2(36),
    CONSTRAINT FK_CODIGO_DEPTO_AREA FOREIGN KEY (COD_DEPTO_AREA)        REFERENCES DB_SERVICIOTI.DEPTO_AREA(CODIGO_DEPTO_AREA),
    CONSTRAINT FK_ESTADO_EMPLEADO FOREIGN KEY (CODIGO_ESTADO)           REFERENCES DB_SERVICIOTI.ESTADOS(CODIGO_ESTADO),
    CONSTRAINT FK_CODIGO_ROL_USUARIO FOREIGN KEY (CODIGO_ROL_USUARIO)   REFERENCES DB_SERVICIOTI.ROLES_USUARIO(CODIGO_ROL_USUARIO)
)
/

create table DB_SERVICIOTI.USUARIOS
(
    CODIGO_USUARIO    VARCHAR2(36)  not null constraint PK_USUARIO primary key references DB_SERVICIOTI.EMPLEADOS,
    USER_ID           VARCHAR2(100 char) unique,
    PASSWORD_USER     VARCHAR2(100 char),
    CORREO            VARCHAR2(100 char) constraint CORREO_CHECK check (INSTR(CORREO, '@') > 0),
    CODIGO_ESTADO     VARCHAR2(36)                                             references DB_SERVICIOTI.ESTADOS,
    TELEFONO_ACTUAL   NUMBER(8)
)
/

CREATE TABLE DB_SERVICIOTI.RECURSOS_INFORMATICOS
(
    CODIGO_RECURSO          VARCHAR2(36) DEFAULT SYS_GUID() NOT NULL CONSTRAINT PK_CODIGO_RECURSO PRIMARY KEY,
    CODIGO_EMPLEADO_ASIGNADO VARCHAR2(36), -- Código del empleado al que se asigna el recurso
    CATEGORIA_RECURSO       VARCHAR2(36) REFERENCES DB_SERVICIOTI.CATEGORIAS(CODIGO_CATEGORIA),
    ESTADO_RECURSO          VARCHAR2(36) REFERENCES DB_SERVICIOTI.ESTADOS(CODIGO_ESTADO),
    DESCRIPCION_RECURSO     VARCHAR2(200),
    MARCA_RECURSO           VARCHAR2(100),
    MODELO_RECURSO          VARCHAR2(100),
    FECHA_ADQUISICION       DATE,
    FECHA_INACTIVO          DATE,

    CONSTRAINT FK_CODIGO_EMPLEADO_ASIGNADO FOREIGN KEY (CODIGO_EMPLEADO_ASIGNADO) REFERENCES DB_SERVICIOTI.EMPLEADOS(CODIGO_EMPLEADO)
)
/


-- Tabla de Prioridades
CREATE TABLE DB_SERVICIOTI.PRIORIDADES
(
    CODIGO_PRIORIDAD VARCHAR2(36 char) DEFAULT SYS_GUID() NOT NULL CONSTRAINT CODIGO_PRIORIDAD_PK PRIMARY KEY,
    NOMBRE_PRIORIDAD VARCHAR2(50) NOT NULL,
    DESCRIPCION      VARCHAR2(200),
    CONSTRAINT UNQ_NOMBRE_PRIORIDAD UNIQUE (NOMBRE_PRIORIDAD)
);

-- Tabla de Ticket
CREATE TABLE DB_SERVICIOTI.TICKET
(
    CODIGO_TICKET           VARCHAR2(36 char) DEFAULT SYS_GUID() NOT NULL CONSTRAINT CODIGO_TICKET_PK PRIMARY KEY,
    CODIGO_EMPLEADO_ASIGNADO VARCHAR2(36), -- Código del empleado asignado al ticket
    FECHA_CREACION          DATE DEFAULT SYSDATE,
    DESCRIPCION             VARCHAR2(200),
    ESTADO_TICKET           VARCHAR2(50) NOT NULL REFERENCES DB_SERVICIOTI.ESTADOS,
    CODIGO_PRIORIDAD        VARCHAR2(36),
    FECHA_HORA_SOLUCION     DATE,
    CODIGO_EMPLEADO_TECNICO VARCHAR2(36),
    CONSTRAINT FK_CODIGO_EMPLEADO_ASIGNADO_TICKET FOREIGN KEY (CODIGO_EMPLEADO_ASIGNADO) REFERENCES DB_SERVICIOTI.EMPLEADOS(CODIGO_EMPLEADO),
    CONSTRAINT FK_CODIGO_PRIORIDAD_TICKET FOREIGN KEY (CODIGO_PRIORIDAD) REFERENCES DB_SERVICIOTI.PRIORIDADES(CODIGO_PRIORIDAD),
    CONSTRAINT FK_CODIGO_EMPLEADO_TECNICO_TICKET FOREIGN KEY (CODIGO_EMPLEADO_TECNICO) REFERENCES DB_SERVICIOTI.EMPLEADOS(CODIGO_EMPLEADO)
)
/

-- Tabla de Detalle de Ticket
CREATE TABLE DB_SERVICIOTI.DETALLE_TICKET
(
    CODIGO_DETALLE   VARCHAR2(36 char) DEFAULT SYS_GUID() NOT NULL CONSTRAINT CODIGO_DETALLE_PK PRIMARY KEY,
    CODIGO_TICKET    VARCHAR2(36) NOT NULL, -- Código del ticket al que pertenece el detalle
    FECHA_DETALLE    DATE NOT NULL,
    COMENTARIO       VARCHAR2(200),
    CODIGO_RECURSO   VARCHAR2(36),
    CONSTRAINT FK_CODIGO_TICKET FOREIGN KEY (CODIGO_TICKET) REFERENCES DB_SERVICIOTI.TICKET(CODIGO_TICKET),
    CONSTRAINT FK_CODIGO_RECURSO FOREIGN KEY (CODIGO_RECURSO) REFERENCES DB_SERVICIOTI.RECURSOS_INFORMATICOS(CODIGO_RECURSO)
)
/

-- Tabla de Puntuación
CREATE TABLE DB_SERVICIOTI.PUNTUACION
(
    CODIGO_PUNTUACION VARCHAR2(36 char) DEFAULT SYS_GUID() NOT NULL CONSTRAINT CODIGO_PUNTUACION_PK PRIMARY KEY,
    DESCRIPCION       VARCHAR2(300) NOT NULL,
    VALOR             NUMBER(1) NOT NULL,
    CONSTRAINT UNQ_PREGUNTA_PUNTUACION UNIQUE (DESCRIPCION)
)
/


CREATE TABLE DB_SERVICIOTI.ENCUESTAS_SATISFACCION
(
   CODIGO_ENCUESTA   VARCHAR2(36 char) DEFAULT SYS_GUID() NOT NULL CONSTRAINT CODIGO_ENCUESTA_PK PRIMARY KEY,
   CODIGO_TICKET     VARCHAR2(36) NOT NULL, -- Código del ticket al que se relaciona la encuesta
   FECHA_ENCUESTA    DATE NOT NULL,
   CODIGO_PUNTUACION VARCHAR2(36), -- Código de puntuación asignado en la encuesta
   COMENTARIOS       VARCHAR2(200),
   CONSTRAINT FK_CODIGO_TICKET_ENCUESTA FOREIGN KEY (CODIGO_TICKET) REFERENCES DB_SERVICIOTI.TICKET(CODIGO_TICKET),
   CONSTRAINT FK_CODIGO_PUNTUACION_ENCUESTA FOREIGN KEY (CODIGO_PUNTUACION) REFERENCES DB_SERVICIOTI.PUNTUACION(CODIGO_PUNTUACION)
)
/


CREATE TABLE BITACORA_GENERAL
(
    CODIGO_USUARIO VARCHAR2(36) REFERENCES USUARIOS PRIMARY KEY ,
    DESCRIPCION    VARCHAR2(400),
    ACCION         VARCHAR2(100),
    FECHA          TIMESTAMP(7) DEFAULT SYSDATE
)











